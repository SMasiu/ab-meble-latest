{"version":3,"sources":["webpack:///./src/components/hero-section/hero-section.style.ts","webpack:///./src/components/hero-section/dynamic-image.tsx","webpack:///./src/components/hero-section/hero-section.tsx","webpack:///./src/components/about-section/about-section.style.ts","webpack:///./src/components/about-section/dynamic-image.tsx","webpack:///./src/components/about-section/about-section.tsx","webpack:///./src/components/products-section/products-section.style.ts","webpack:///./src/components/products-section/dunamic-image-lg.tsx","webpack:///./src/components/products-section/dynamic-image-sm.tsx","webpack:///./src/components/products-section/products-section.tsx","webpack:///./src/components/projects-section/projects-section.style.ts","webpack:///./src/components/projects-section/dynamic-image.tsx","webpack:///./src/components/projects-section/projects-section.tsx","webpack:///./src/pages/index.tsx"],"names":["HeroSectionWrapper","styled","section","getBgColor","HeroSectionInnerWrapper","getPageWidth","HeroArticle","article","HeroHeader","header","getHeadingUnderline","HeaderWord","span","ArticleContent","p","ArticleQuotationWrapper","div","ArticleQuotation","HeroImageSection","HeroImageWrapper","figure","HeroImageWrapper1","HeroImageWrapper2","HeroImage","Img","SliderButtonWrapper","SliderButton","button","theme","active","css","colors","primary100","WaterMark","DecorateLine","HeroDynamicImage","alt","fileName","query","render","data","image","images","edges","find","n","node","relativePath","includes","fluid","childImageSharp","HeroSection","to","AboutSectionWrapper","AboutImageSection","ImageWrapper","ArticleImage","AboutArtice","AboutHeader","getHeadingCenterUnderline","AboutContentWrapper","AboutContent","LinkAnchor","AboutDynamicImage","AboutSection","id","ProductsSectionWrapper","ProductLinkAnchor","ProductsHeader","ProductsHeading","HeadingH3","ProductsItemsWrapper","ProductItem","ProductImageWrapper","getImgHoverBg","ProductImage","ProductHeader","ProductHeading","HeadingH5","ProductsCardsWrapper","ProductCard","CardImage","BackgroundImage","ProductSectionDynamicImageLg","ProductSectionDynamicImageSm","ProductsSection","productsSectionInput","cards","map","card","i","key","link","imgPath","items","item","ProjectsSectionWrapper","ProjectsHeader","ProjectsHeading","ProjectsInnerWrapper","ProjectItemWrapper","ProjectImage","ProjectContent","ProjectHeader","ProjectHeading","HeadingH4","getColor","getFontSize","ProjectSectionDynamicImage","ProjectsSecton","IndexPage","title"],"mappings":"gMAKaA,EAAqBC,IAAOC,QAAV,wFAAGD,CAAH,gMAK3BE,YAAW,aAYFC,EAA0BH,IAAOC,QAAV,6FAAGD,CAAH,0JAChCI,KAcSC,EAAcL,IAAOM,QAAV,iFAAGN,CAAH,8GAWXO,EAAaP,IAAOQ,OAAV,gFAAGR,CAAH,mDAGnBS,KAGSC,EAAaV,IAAOW,KAAV,gFAAGX,CAAH,qCAKVY,EAAiBZ,IAAOa,EAAV,oFAAGb,CAAH,yCAKdc,EAA0Bd,IAAOe,IAAV,6FAAGf,CAAH,8FAWvBgB,EAAmBhB,IAAOa,EAAV,sFAAGb,CAAH,sHACzBI,KAaSa,EAAmBjB,IAAOC,QAAV,sFAAGD,CAAH,8LAehBkB,EAAmBlB,IAAOmB,OAAV,sFAAGnB,CAAH,uYAkChBoB,EAAoBpB,YAAOkB,GAAV,wFAAGlB,CAAH,iEAMjBqB,EAAoBrB,YAAOkB,GAAV,wFAAGlB,CAAH,4EAOjBsB,EAAiBtB,YAAOuB,KAAV,gFAAGvB,CAAH,MAEdwB,EAAsBxB,IAAOC,QAAV,0FAAGD,CAAH,0KAkBnByB,EAAezB,IAAO0B,OAAV,mFAAG1B,CAAH,mGAWrB,gBAAG2B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OAA0CC,YAAzC,CAAD,yBACoBD,EAASD,EAAMG,OAAOC,WAAa,cAI9CC,EAAYhC,IAAOa,EAAV,gFAAGb,CAAH,sMAeTiC,EAAejC,IAAOW,KAAV,mFAAGX,CAAH,iJAMrBE,YAAW,Y,oCCvMFgC,EAAgD,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAR,OAC3D,kBAAC,IAAD,CACEC,MAAK,aAiBLC,OAAQ,SAACC,GACP,IAAMC,EAAQD,EAAKE,OAAOC,MAAMC,MAAK,SAACC,GACpC,OAAOA,EAAEC,KAAKC,aAAaC,SAASX,MAEtC,OAAKI,EAIE,kBAAClB,EAAD,CAAWa,IAAKA,EAAKa,MAAOR,EAAMK,KAAKI,gBAAgBD,QAHrD,SCVFE,EAAc,kBACzB,kBAACnD,EAAD,KACE,kBAACkC,EAAD,MACA,kBAACD,EAAD,cACA,kBAAClB,EAAD,KACE,kBAACE,EAAD,oDAEF,kBAACb,EAAD,KACE,kBAACE,EAAD,KACE,kBAACE,EAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,KACE,kBAACG,EAAD,cADF,IACiC,kBAACA,EAAD,kBAGnC,kBAACE,EAAD,iKAIA,kBAAC,IAAD,CAAMuC,GAAG,cACP,kBAAC,IAAD,uBAGJ,kBAAClC,EAAD,KACE,kBAACI,EAAD,KACE,kBAAC,EAAD,CAAkBe,SAAQ,kBAAqBD,IAAI,WAErD,kBAACf,EAAD,KACE,kBAAC,EAAD,CAAkBgB,SAAQ,kBAAqBD,IAAI,aAIzD,kBAACX,EAAD,KACE,kBAACC,EAAD,CAAcG,QAAQ,IACtB,kBAACH,EAAD,CAAcG,QAAQ,IACtB,kBAACH,EAAD,CAAcG,QAAQ,OCtDfwB,EAAsBpD,IAAOC,QAAV,0FAAGD,CAAH,4ZAC5BI,KA6BSiD,EAAoBrD,IAAOC,QAAV,wFAAGD,CAAH,wCAKjBsD,EAAetD,IAAOmB,OAAV,mFAAGnB,CAAH,kIAcZuD,EAAoBvD,YAAOuB,KAAV,mFAAGvB,CAAH,MAEjBwD,EAAcxD,IAAOM,QAAV,kFAAGN,CAAH,wBAIXyD,EAAczD,IAAOQ,OAAV,kFAAGR,CAAH,mGAGpBS,IAIEiD,KAIOC,EAAsB3D,IAAOC,QAAV,0FAAGD,CAAH,sBAInB4D,EAAe5D,IAAOa,EAAV,mFAAGb,CAAH,oCAKZ6D,EAAa7D,IAAOW,KAAV,iFAAGX,CAAH,0CCtEV8D,EAAiD,SAAC,GAAD,IAAG3B,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAR,OAC5D,kBAAC,IAAD,CACEC,MAAK,aAiBLC,OAAQ,SAACC,GACP,IAAMC,EAAQD,EAAKE,OAAOC,MAAMC,MAAK,SAACC,GACpC,OAAOA,EAAEC,KAAKC,aAAaC,SAASX,MAEtC,OAAKI,EAIE,kBAACe,EAAD,CAAcpB,IAAKA,EAAKa,MAAOR,EAAMK,KAAKI,gBAAgBD,QAHxD,SCnBFe,EAAe,kBAC1B,kBAACX,EAAD,KACE,kBAACS,EAAD,CAAYG,GAAG,aACf,kBAACX,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAmBlB,SAAQ,YAAeD,IAAI,YAGlD,kBAACqB,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,qBAEF,kBAACE,EAAD,KACE,kBAACC,EAAD,64CAmBA,kBAACA,EAAD,iBAEA,kBAACA,EAAD,iKAIA,kBAACA,EAAD,0J,qBC9CKK,EAAyBjE,IAAOC,QAAV,+FAAGD,CAAH,gEAE/BI,KAOS8D,EAAoBlE,IAAOe,IAAV,0FAAGf,CAAH,0CAMjBmE,EAAiBnE,IAAOQ,OAAV,uFAAGR,CAAH,QACvB0D,KAGSU,EAAkBpE,YAAOqE,KAAV,wFAAGrE,CAAH,wBAGfsE,EAAuBtE,IAAOC,QAAV,6FAAGD,CAAH,iMAepBuE,EAAcvE,IAAOC,QAAV,oFAAGD,CAAH,MAEXwE,EAAsBxE,IAAOC,QAAV,4FAAGD,CAAH,wGAG5ByE,KAGSC,EAAoB1E,YAAOuB,KAAV,qFAAGvB,CAAH,MAEjB2E,GAAgB3E,IAAOQ,OAAV,sFAAGR,CAAH,sBAIb4E,GAAiB5E,YAAO6E,KAAV,uFAAG7E,CAAH,wBAId8E,GAAuB9E,IAAOC,QAAV,8FAAGD,CAAH,iMAepB+E,GAAc/E,IAAOC,QAAV,qFAAGD,CAAH,MAMXgF,GAAYhF,YAAOiF,KAAV,mFAAGjF,CAAH,mGAMlByE,K,aChFSS,GAA4D,SAAC,GAAD,IAAG/C,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAR,OACvE,kBAAC,IAAD,CACEC,MAAK,YAiBLC,OAAQ,SAACC,GACP,IAAMC,EAAQD,EAAKE,OAAOC,MAAMC,MAAK,SAACC,GACpC,OAAOA,EAAEC,KAAKC,aAAaC,SAASX,MAEtC,OAAKI,EAIE,kBAACwC,GAAD,CAAW7C,IAAKA,EAAKa,MAAOR,EAAMK,KAAKI,gBAAgBD,QAHrD,SCxBFmC,GAA4D,SAAC,GAAD,IAAGhD,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAR,OACvE,kBAAC,IAAD,CACEC,MAAK,aAiBLC,OAAQ,SAACC,GACP,IAAMC,EAAQD,EAAKE,OAAOC,MAAMC,MAAK,SAACC,GACpC,OAAOA,EAAEC,KAAKC,aAAaC,SAASX,MAEtC,OAAKI,EAIE,kBAACkC,EAAD,CAAcvC,IAAKA,EAAKa,MAAOR,EAAMK,KAAKI,gBAAgBD,QAHxD,SCdFoC,GAAkB,kBAC7B,kBAACnB,EAAD,KACE,kBAACC,EAAD,CAAmBF,GAAG,aACtB,kBAACG,EAAD,KACE,kBAACC,EAAD,2BAEF,kBAACU,GAAD,KACGO,KAAqBC,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC9B,kBAAC,IAAD,CAAMC,IAAKD,EAAGtC,GAAIqC,EAAKG,MACrB,kBAACZ,GAAD,KACE,kBAAC,GAAD,CAA8B3C,SAAUoD,EAAKI,QAASzD,IAAI,YAC1D,kBAACwC,GAAD,KACE,kBAACC,GAAD,KAAiBY,EAAKhF,eAMhC,kBAAC8D,EAAD,KACGe,KAAqBQ,MAAMN,KAAI,SAACO,EAAML,GAAP,OAC9B,kBAAC,IAAD,CAAMtC,GAAI2C,EAAKH,KAAMD,IAAKD,GACxB,kBAAClB,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,GAAD,CAA8BpC,SAAU0D,EAAKF,QAASzD,IAAI,aAE5D,kBAACwC,GAAD,KACE,kBAACC,GAAD,KAAiBkB,EAAKtF,iBCjCvBuF,GAAyB/F,IAAOC,QAAV,gGAAGD,CAAH,uIAM/BI,KAOS4F,GAAiBhG,IAAOQ,OAAV,wFAAGR,CAAH,QACvB0D,KAGSuC,GAAkBjG,YAAOqE,KAAV,yFAAGrE,CAAH,wBAIfkG,GAAuBlG,IAAOC,QAAV,8FAAGD,CAAH,gJAYpBmG,GAAqBnG,IAAOM,QAAV,4FAAGN,CAAH,sTAqBzBE,YAAW,eAeJkG,GAAoBpG,YAAOiF,KAAV,sFAAGjF,CAAH,2GASjBqG,GAAiBrG,IAAOC,QAAV,wFAAGD,CAAH,oCAKdsG,GAAgBtG,IAAOQ,OAAV,uFAAGR,CAAH,sHAWbuG,GAAiBvG,YAAOwG,KAAV,wFAAGxG,CAAH,6MAOvByG,YAAS,WACTC,YAAY,cCzGHC,GAA0D,SAAC,GAAD,IAAGxE,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAR,OACrE,kBAAC,IAAD,CACEC,MAAK,WAiBLC,OAAQ,SAACC,GACP,IAAMC,EAAQD,EAAKE,OAAOC,MAAMC,MAAK,SAACC,GACpC,OAAOA,EAAEC,KAAKC,aAAaC,SAASX,MAEtC,OAAKI,EAIE,kBAAC4D,GAAD,CAAcjE,IAAKA,EAAKa,MAAOR,EAAMK,KAAKI,gBAAgBD,QAHxD,SClBF4D,GAAiB,kBAC5B,kBAACb,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,qCAEF,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACE,GAAD,KACE,kBAAC,GAAD,CAA4BjE,SAAQ,8BAAiCD,IAAI,aACzE,kBAACmE,GAAD,KACE,kBAACC,GAAD,iBACA,kBAAC,IAAD,CAAMpD,GAAG,aACP,kBAAC,IAAD,0BAKR,kBAACgD,GAAD,KACE,kBAACE,GAAD,KACE,kBAAC,GAAD,CACEjE,SAAQ,kCACRD,IAAI,eAEN,kBAACmE,GAAD,KACE,kBAACC,GAAD,mBACA,kBAAC,IAAD,CAAMpD,GAAG,eACP,kBAAC,IAAD,6BCrBC0D,UAZa,WAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD","file":"component---src-pages-index-tsx-c31eaa2ae7f36882cd3e.js","sourcesContent":["import styled, { css } from 'styled-components'\nimport { getPageWidth, getBgColor, getHeadingUnderline } from 'styles/css.helpers'\nimport { ThemeProps } from 'styles/theme.type'\nimport Img from 'gatsby-image'\n\nexport const HeroSectionWrapper = styled.section`\n  height: calc(100vh - 80px);\n  min-height: 800px;\n  position: relative;\n  margin-bottom: 100px;\n  ${getBgColor('light200')}\n\n  @media (max-width: 1350px) {\n    min-height: 550px;\n    height: auto;\n  }\n\n  @media (max-width: 1024px) {\n    margin-bottom: 50px;\n  }\n`\n\nexport const HeroSectionInnerWrapper = styled.section`\n  ${getPageWidth}\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n\n  @media (max-width: 1350px) {\n    width: 90%;\n  }\n\n  @media (max-width: 1024px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nexport const HeroArticle = styled.article`\n  margin-top: 25%;\n  @media (max-width: 1350px) {\n    margin-top: 10%;\n  }\n\n  @media (max-width: 1024px) {\n    justify-self: center;\n  }\n`\n\nexport const HeroHeader = styled.header`\n  display: flex;\n  flex-direction: column-reverse;\n  ${getHeadingUnderline}\n`\n\nexport const HeaderWord = styled.span`\n  display: block;\n  line-height: 150%;\n`\n\nexport const ArticleContent = styled.p`\n  margin: 30px 0 15px;\n  max-width: 500px;\n`\n\nexport const ArticleQuotationWrapper = styled.div`\n  width: 100%;\n  position: absolute;\n  left: 0;\n  bottom: 100px;\n\n  @media (max-width: 1350px) {\n    bottom: 25px;\n  }\n`\n\nexport const ArticleQuotation = styled.p`\n  ${getPageWidth}\n  display: block;\n  font-style: italic;\n\n  @media (max-width: 1350px) {\n    width: 90%;\n  }\n\n  @media (max-width: 1024px) {\n    display: none;\n  }\n`\n\nexport const HeroImageSection = styled.section`\n  position: relative;\n  @media (max-width: 1024px) {\n    padding: 50px 0;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    justify-items: center;\n    align-items: center;\n  }\n\n  @media (max-width: 650px) {\n    padding: 25px 0;\n  }\n`\n\nexport const HeroImageWrapper = styled.figure`\n  position: absolute;\n  width: 500px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 100px;\n    left: -45px;\n    width: 75%;\n    height: 50%;\n    border-radius: 50%;\n    background-color: #3b3b3b22;\n    filter: blur(25px);\n    transform: skew(-15deg, 45deg);\n  }\n\n  @media (max-width: 1650px) {\n    &::after {\n      content: none;\n    }\n  }\n\n  @media (max-width: 1350px) {\n    width: 50%;\n    bottom: -225px;\n  }\n\n  @media (max-width: 1024px) {\n    position: static;\n    transform: scaleX(-1) translateX(0);\n  }\n`\n\nexport const HeroImageWrapper1 = styled(HeroImageWrapper)`\n  left: 25%;\n  bottom: -75px;\n  transform: scaleX(-1) translateX(50%);\n`\n\nexport const HeroImageWrapper2 = styled(HeroImageWrapper)`\n  left: 75%;\n  bottom: 10px;\n  transform: scaleX(-1) translateX(50%);\n  width: 375px;\n`\n\nexport const HeroImage: any = styled(Img)``\n\nexport const SliderButtonWrapper = styled.section`\n  position: absolute;\n  bottom: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n\n  @media (max-width: 1350px) {\n    bottom: 25px;\n  }\n`\n\nexport type SliderButtonProps = {\n  active: boolean\n} & ThemeProps\n\nexport const SliderButton = styled.button<SliderButtonProps>`\n  width: 20px;\n  height: 20px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  ${({ theme, active }: SliderButtonProps) => css`\n    background-color: ${active ? theme.colors.primary100 : '#d1d1d1'};\n  `}\n`\n\nexport const WaterMark = styled.p`\n  position: absolute;\n  top: 250px;\n  right: 0;\n  font-size: 450px;\n  opacity: 0.025;\n  font-weight: 800;\n  transform: translate(32.5%, 50%) rotate(90deg);\n  text-transform: uppercase;\n\n  @media (max-width: 1024px) {\n    display: none;\n  }\n`\n\nexport const DecorateLine = styled.span`\n  position: absolute;\n  left: 50px;\n  top: 25%;\n  height: 200px;\n  width: 1px;\n  ${getBgColor('dark300')}\n\n  @media (max-width: 1600px) {\n    left: 20px;\n  }\n\n  @media (max-width: 1350px) {\n    display: none;\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { HeroImage } from './hero-section.style'\n\nexport interface DynamicImageProps {\n  fileName: string\n  alt: string\n}\n\nexport const HeroDynamicImage: React.FC<DynamicImageProps> = ({ alt, fileName }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 500) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => {\n      const image = data.images.edges.find((n: any) => {\n        return n.node.relativePath.includes(fileName)\n      })\n      if (!image) {\n        return null\n      }\n\n      return <HeroImage alt={alt} fluid={image.node.childImageSharp.fluid} />\n    }}\n  />\n)\n","import React from 'react'\nimport {\n  HeroSectionWrapper,\n  HeroSectionInnerWrapper,\n  HeroArticle,\n  HeroHeader,\n  HeaderWord,\n  ArticleContent,\n  HeroImageSection,\n  HeroImageWrapper1,\n  HeroImageWrapper2,\n  SliderButtonWrapper,\n  SliderButton,\n  WaterMark,\n  DecorateLine,\n  ArticleQuotation,\n  ArticleQuotationWrapper\n} from './hero-section.style'\nimport { HeadingH1, HeadingH2 } from 'components/headings/headings'\nimport { Button } from 'components/button/button'\nimport { HeroDynamicImage } from './dynamic-image'\nimport { Link } from 'gatsby'\n\nexport const HeroSection = () => (\n  <HeroSectionWrapper>\n    <DecorateLine />\n    <WaterMark>meble</WaterMark>\n    <ArticleQuotationWrapper>\n      <ArticleQuotation>Zapweniamy dobre miejsce w Twoim biznesie.</ArticleQuotation>\n    </ArticleQuotationWrapper>\n    <HeroSectionInnerWrapper>\n      <HeroArticle>\n        <HeroHeader>\n          <HeadingH1>AB Meble</HeadingH1>\n          <HeadingH2>\n            <HeaderWord>Meble</HeaderWord> <HeaderWord>biurowe</HeaderWord>\n          </HeadingH2>\n        </HeroHeader>\n        <ArticleContent>\n          Pracownik niezadowolony z warunków pracy, to pracownik mniej wydajny. Stworzenie\n          przyjaznego otoczenia pracy powinno być celem każdego przedsiębiorstwa.\n        </ArticleContent>\n        <Link to=\"/#o-firmie\">\n          <Button>Pokaż więcej</Button>\n        </Link>\n      </HeroArticle>\n      <HeroImageSection>\n        <HeroImageWrapper2>\n          <HeroDynamicImage fileName={`hero_chair2.png`} alt=\"chair\" />\n        </HeroImageWrapper2>\n        <HeroImageWrapper1>\n          <HeroDynamicImage fileName={`hero_chair1.png`} alt=\"chair\" />\n        </HeroImageWrapper1>\n      </HeroImageSection>\n    </HeroSectionInnerWrapper>\n    <SliderButtonWrapper>\n      <SliderButton active={true} />\n      <SliderButton active={false} />\n      <SliderButton active={false} />\n    </SliderButtonWrapper>\n  </HeroSectionWrapper>\n)\n","import styled from 'styled-components'\nimport { getPageWidth, getHeadingUnderline, getHeadingCenterUnderline } from 'styles/css.helpers'\nimport Img from 'gatsby-image'\n\nexport const AboutSectionWrapper = styled.section`\n  ${getPageWidth}\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-areas: 'image article';\n  gap: 50px;\n  height: auto;\n  min-height: 700px;\n  margin: 150px auto 100px;\n\n  @media (max-width: 1350px) {\n    padding: 0 50px;\n  }\n\n  @media (max-width: 1000px) {\n    grid-template-columns: 1fr;\n    grid-template-areas: 'article' 'image';\n    height: auto;\n    min-height: 0;\n    margin-bottom: 50px;\n    justify-items: center;\n  }\n\n  @media (max-width: 650px) {\n    width: 90%;\n    padding: 0;\n  }\n`\n\nexport const AboutImageSection = styled.section`\n  align-self: center;\n  grid-area: image;\n`\n\nexport const ImageWrapper = styled.figure`\n  max-width: 600px;\n\n  @media (max-width: 950px) {\n    max-width: 400px;\n    width: 400px;\n  }\n\n  @media (max-width: 500px) {\n    max-width: 400px;\n    width: 300px;\n  }\n`\n\nexport const ArticleImage: any = styled(Img)``\n\nexport const AboutArtice = styled.article`\n  grid-area: article;\n`\n\nexport const AboutHeader = styled.header`\n  display: flex;\n  flex-direction: column-reverse;\n  ${getHeadingUnderline}\n\n  @media (max-width: 950px) {\n    text-align: center;\n    ${getHeadingCenterUnderline}\n  }\n`\n\nexport const AboutContentWrapper = styled.section`\n  margin-top: 40px;\n`\n\nexport const AboutContent = styled.p`\n  padding: 5px 0;\n  max-width: 600px;\n`\n\nexport const LinkAnchor = styled.span`\n  position: absolute;\n  left: 0;\n  top: -100px;\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { ArticleImage } from './about-section.style'\n\nexport interface DynamicImageProps {\n  fileName: string\n  alt: string\n}\n\nexport const AboutDynamicImage: React.FC<DynamicImageProps> = ({ alt, fileName }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => {\n      const image = data.images.edges.find((n: any) => {\n        return n.node.relativePath.includes(fileName)\n      })\n      if (!image) {\n        return null\n      }\n\n      return <ArticleImage alt={alt} fluid={image.node.childImageSharp.fluid} />\n    }}\n  />\n)\n","import React from 'react'\nimport {\n  AboutSectionWrapper,\n  AboutImageSection,\n  AboutArtice,\n  ImageWrapper,\n  AboutHeader,\n  AboutContent,\n  AboutContentWrapper,\n  LinkAnchor\n} from './about-section.style'\nimport { HeadingH3, HeadingH4 } from 'components/headings/headings'\nimport { AboutDynamicImage } from './dynamic-image'\n\nexport const AboutSection = () => (\n  <AboutSectionWrapper>\n    <LinkAnchor id=\"o-firmie\" />\n    <AboutImageSection>\n      <ImageWrapper>\n        <AboutDynamicImage fileName={`about.png`} alt=\"about\" />\n      </ImageWrapper>\n    </AboutImageSection>\n    <AboutArtice>\n      <AboutHeader>\n        <HeadingH3>O firmie</HeadingH3>\n        <HeadingH4>Sub heading</HeadingH4>\n      </AboutHeader>\n      <AboutContentWrapper>\n        <AboutContent>\n          W pracy spędzamy większość naszego czasu ,dlatego przestrzeń w której pracujemy wymaga\n          rozwiązań pozwalających zadbać o zdrowie , komfort i bezpieczeństwo również w miejscach\n          pracy. Przestrzeń biurowa nie musi być nudna . Na właściwą organizację przestrzeni\n          biurowej wiele czynników, m.in.: rozmieszczenie mebli i prawidłowa aranżacja pomieszczeń ,\n          ustawienie sprzętu komputerowego, stopień natężenia hałasu, temperatura otoczenia czy\n          rodzaj oświetlenia w biurze. Nasza firma zaprojektuje każdą przestrzeń począwszy od :\n          określenia potrzeb , pomiarów . Pomożemy w doborze rodzaju mebli , kolorystyki itp.\n          Następnie wykonamy dla Ciebie meble i zmontujemy . Współpracujemy z wieloma dostawcami z\n          zakresu foteli obrotowych , konferencyjnych , kanap i siedzisk do holi , recepcji ,\n          ekranów między biurkowych , ścianek wygłuszających , boksów , stelaży do biurek , mebli\n          metalowych i wielu innych . Jesteśmy doświadczoną firmą działającą od 2004 roku . Zaufali\n          nam klienci indywidualni dla których tworzyliśmy i wykonywaliśmy wiele przestrzeni\n          domowych tj kuchnie ,salony , sypialnie , itp. Aby nasi klienci zaciszu domowym czuli się\n          komfortowo i mogli powiedzieć tak to jest nasz dom. Zaufało nam wiele przedsiębiorstw ,\n          firm , instytucji użyteczności publicznej .Uśmiech i podziękowania z ich strony jest dla\n          nas największą wartością dlatego w 98 % kontynuujemy z naszymi drogimi Klientami dalszą\n          owocną współpracę.\n        </AboutContent>\n        <AboutContent>Pamiętaj</AboutContent>\n\n        <AboutContent>\n          Pracownik niezadowolony z warunków pracy, to pracownik mniej wydajny. Stworzenie\n          przyjaznego otoczenia pracy powinno być celem każdego przedsiębiorstwa.\n        </AboutContent>\n        <AboutContent>\n          Jeśli jesteś zainteresowany zadzwoń Jeśli nic nie znalazłeś dla siebie skontaktuj się z\n          nami a wypracujemy wspólnie dla ciebie nową koncepcję\n        </AboutContent>\n      </AboutContentWrapper>\n    </AboutArtice>\n  </AboutSectionWrapper>\n)\n","import styled from 'styled-components'\nimport { HeadingH3, HeadingH5 } from 'components/headings/headings'\nimport { getHeadingCenterUnderline, getPageWidth, getImgHoverBg } from 'styles/css.helpers'\nimport { ThemeProps } from 'styles/theme.type'\nimport BackgroundImage from 'gatsby-background-image'\nimport Img from 'gatsby-image'\n\nexport const ProductsSectionWrapper = styled.section`\n  position: relative;\n  ${getPageWidth};\n\n  @media (max-width: 1350px) {\n    width: 90%;\n  }\n`\n\nexport const ProductLinkAnchor = styled.div`\n  position: absolute;\n  left: 0;\n  top: -115px;\n`\n\nexport const ProductsHeader = styled.header`\n  ${getHeadingCenterUnderline}\n`\n\nexport const ProductsHeading = styled(HeadingH3)`\n  text-align: center;\n`\nexport const ProductsItemsWrapper = styled.section`\n  margin: 50px 0;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 50px;\n\n  @media (max-width: 1350px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: 550px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nexport const ProductItem = styled.section``\n\nexport const ProductImageWrapper = styled.section`\n  padding: 25px;\n  background: linear-gradient(135deg, rgba(252, 252, 252, 1) 0%, rgba(247, 247, 247, 1) 100%);\n  ${getImgHoverBg}\n`\n\nexport const ProductImage: any = styled(Img)``\n\nexport const ProductHeader = styled.header`\n  margin-top: 15px;\n`\n\nexport const ProductHeading = styled(HeadingH5)`\n  text-align: center;\n`\n\nexport const ProductsCardsWrapper = styled.section`\n  margin: 50px 0;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 50px;\n\n  @media (max-width: 1350px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: 650px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nexport const ProductCard = styled.section``\n\nexport type CardImageWrapperProps = {\n  url: string\n} & ThemeProps\n\nexport const CardImage = styled(BackgroundImage)`\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  height: 250px;\n  position: relative;\n  ${getImgHoverBg}\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { CardImage } from './products-section.style'\n\nexport interface DynamicImageProps {\n  fileName: string\n  alt: string\n}\n\nexport const ProductSectionDynamicImageLg: React.FC<DynamicImageProps> = ({ alt, fileName }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 440) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => {\n      const image = data.images.edges.find((n: any) => {\n        return n.node.relativePath.includes(fileName)\n      })\n      if (!image) {\n        return null\n      }\n\n      return <CardImage alt={alt} fluid={image.node.childImageSharp.fluid} />\n    }}\n  />\n)\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { ProductImage } from './products-section.style'\n\nexport interface DynamicImageProps {\n  fileName: string\n  alt: string\n}\n\nexport const ProductSectionDynamicImageSm: React.FC<DynamicImageProps> = ({ alt, fileName }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => {\n      const image = data.images.edges.find((n: any) => {\n        return n.node.relativePath.includes(fileName)\n      })\n      if (!image) {\n        return null\n      }\n\n      return <ProductImage alt={alt} fluid={image.node.childImageSharp.fluid} />\n    }}\n  />\n)\n","import React from 'react'\nimport {\n  ProductsSectionWrapper,\n  ProductsHeading,\n  ProductsHeader,\n  ProductsItemsWrapper,\n  ProductItem,\n  ProductImageWrapper,\n  ProductHeader,\n  ProductHeading,\n  ProductsCardsWrapper,\n  ProductCard,\n  ProductLinkAnchor\n} from './products-section.style'\nimport { productsSectionInput } from 'inputs/products-section.input'\nimport { Link } from 'gatsby'\nimport { ProductSectionDynamicImageLg } from './dunamic-image-lg'\nimport { ProductSectionDynamicImageSm } from './dynamic-image-sm'\n\nexport const ProductsSection = () => (\n  <ProductsSectionWrapper>\n    <ProductLinkAnchor id=\"produkty\" />\n    <ProductsHeader>\n      <ProductsHeading>Katalog produktów</ProductsHeading>\n    </ProductsHeader>\n    <ProductsCardsWrapper>\n      {productsSectionInput.cards.map((card, i) => (\n        <Link key={i} to={card.link}>\n          <ProductCard>\n            <ProductSectionDynamicImageLg fileName={card.imgPath} alt=\"Produkt\" />\n            <ProductHeader>\n              <ProductHeading>{card.header}</ProductHeading>\n            </ProductHeader>\n          </ProductCard>\n        </Link>\n      ))}\n    </ProductsCardsWrapper>\n    <ProductsItemsWrapper>\n      {productsSectionInput.items.map((item, i) => (\n        <Link to={item.link} key={i}>\n          <ProductItem>\n            <ProductImageWrapper>\n              <ProductSectionDynamicImageSm fileName={item.imgPath} alt=\"produkt\" />\n            </ProductImageWrapper>\n            <ProductHeader>\n              <ProductHeading>{item.header}</ProductHeading>\n            </ProductHeader>\n          </ProductItem>\n        </Link>\n      ))}\n    </ProductsItemsWrapper>\n  </ProductsSectionWrapper>\n)\n","import styled from 'styled-components'\nimport { HeadingH3, HeadingH4 } from 'components/headings/headings'\nimport {\n  getHeadingCenterUnderline,\n  getPageWidth,\n  getColor,\n  getFontSize,\n  getBgColor\n} from 'styles/css.helpers'\nimport { ThemeProps } from 'styles/theme.type'\nimport BackgroundImage from 'gatsby-background-image'\n\nexport const ProjectsSectionWrapper = styled.section`\n  height: 90vh;\n  min-height: 800px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  ${getPageWidth}\n\n  @media (max-width: 1350px) {\n    height: auto;\n  }\n`\n\nexport const ProjectsHeader = styled.header`\n  ${getHeadingCenterUnderline}\n`\n\nexport const ProjectsHeading = styled(HeadingH3)`\n  text-align: center;\n`\n\nexport const ProjectsInnerWrapper = styled.section`\n  margin: 75px 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 50px;\n\n  @media (max-width: 1350px) {\n    margin: 25px 0 50px;\n    grid-template-columns: 1fr;\n  }\n`\n\nexport const ProjectItemWrapper = styled.article`\n  position: relative;\n\n  @media (max-width: 1350px) {\n    margin: auto;\n    width: 700px;\n  }\n\n  @media (max-width: 900px) {\n    margin: auto;\n    width: 90%;\n  }\n\n  &::after {\n    content: '';\n    z-index: 50;\n    position: absolute;\n    width: 300px;\n    height: 400px;\n    left: -25px;\n    bottom: 20px;\n    ${getBgColor('primary100')}\n\n    @media (max-width: 650px) {\n      height: 250px;\n      left: -5px;\n      width: calc(100% + 10px);\n      bottom: -15px;\n    }\n  }\n`\n\nexport type ProjectImageProps = {\n  url: string\n} & ThemeProps\n\nexport const ProjectImage: any = styled(BackgroundImage)`\n  background-position: center;\n  background-size: cover;\n  height: 450px;\n\n  @media (max-width: 450px) {\n    height: 250px;\n  }\n`\nexport const ProjectContent = styled.section`\n  position: relative;\n  z-index: 110;\n`\n\nexport const ProjectHeader = styled.header`\n  margin-top: 25px;\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 650px) {\n    flex-direction: column;\n    margin-top: 15px;\n  }\n`\n\nexport const ProjectHeading = styled(HeadingH4)`\n  display: block;\n  text-align: right;\n  width: 225px;\n  margin-right: 50px;\n  margin-left: 25px;\n  font-weight: 800;\n  ${getColor('dark100')}\n  ${getFontSize('headingMd')}\n\n  @media (max-width: 650px) {\n    margin: 0;\n    text-align: center;\n    width: auto;\n    margin-bottom: 15px;\n    font-size: 22px;\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { ProjectImage } from './projects-section.style'\n\nexport interface DynamicImageProps {\n  fileName: string\n  alt: string\n}\n\nexport const ProjectSectionDynamicImage: React.FC<DynamicImageProps> = ({ alt, fileName }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 700) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => {\n      const image = data.images.edges.find((n: any) => {\n        return n.node.relativePath.includes(fileName)\n      })\n      if (!image) {\n        return null\n      }\n\n      return <ProjectImage alt={alt} fluid={image.node.childImageSharp.fluid} />\n    }}\n  />\n)\n","import React from 'react'\nimport {\n  ProjectsSectionWrapper,\n  ProjectsHeader,\n  ProjectsHeading,\n  ProjectsInnerWrapper,\n  ProjectItemWrapper,\n  ProjectHeader,\n  ProjectHeading,\n  ProjectContent\n} from './projects-section.style'\nimport { Button } from 'components/button/button'\nimport { Link } from 'gatsby'\nimport { ProjectSectionDynamicImage } from './dynamic-image'\n\nexport const ProjectsSecton = () => (\n  <ProjectsSectionWrapper>\n    <ProjectsHeader>\n      <ProjectsHeading>Nasze projekty i realizacje</ProjectsHeading>\n    </ProjectsHeader>\n    <ProjectsInnerWrapper>\n      <ProjectItemWrapper>\n        <ProjectContent>\n          <ProjectSectionDynamicImage fileName={`project_section_project.jpg`} alt=\"Projekty\" />\n          <ProjectHeader>\n            <ProjectHeading>Projekty</ProjectHeading>\n            <Link to=\"/projekty\">\n              <Button>Zobacz więcej</Button>\n            </Link>\n          </ProjectHeader>\n        </ProjectContent>\n      </ProjectItemWrapper>\n      <ProjectItemWrapper>\n        <ProjectContent>\n          <ProjectSectionDynamicImage\n            fileName={`project_section_realization.jpg`}\n            alt=\"Realizacje\"\n          />\n          <ProjectHeader>\n            <ProjectHeading>Realizacje</ProjectHeading>\n            <Link to=\"/realizacje\">\n              <Button>Zobacz więcej</Button>\n            </Link>\n          </ProjectHeader>\n        </ProjectContent>\n      </ProjectItemWrapper>\n    </ProjectsInnerWrapper>\n  </ProjectsSectionWrapper>\n)\n","import React from 'react'\nimport { Layout } from 'components/layout/layout'\nimport { SEO } from 'components/seo/seo'\nimport { HeroSection } from 'components/hero-section/hero-section'\nimport { AboutSection } from 'components/about-section/about-section'\nimport { ProductsSection } from 'components/products-section/products-section'\nimport { ProjectsSecton } from 'components/projects-section/projects-section'\n\nconst IndexPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <HeroSection />\n      <AboutSection />\n      <ProductsSection />\n      <ProjectsSecton />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}